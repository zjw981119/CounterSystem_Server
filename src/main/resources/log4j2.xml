<?xml version="1.0" encoding="UTF-8"?>
<!--使用方式如下： private static final Logger logger = LogManager.getLogger(实际类名.class.getName());
	2、日志说明： （1）请根据实际情况配置各项参数 （2）需要注意日志文件备份数和日志文件大小，注意预留目录空间 （3）实际部署的时候backupFilePatch变量需要修改成linux目录 -->
<Configuration monitorInterval="30">

    <properties>
        <!--变量定义 -->
        <!--        <Property name="baseDir">/Volumes/D/logs</Property>-->
        <Property name="baseDir">D:/files/logs</Property>
        <Property name="basePattern">[%d{yyyy-MM-dd HH:mm:ss:SSS}]-[%5p]-[%21t]-[%C{5.}(%L)]-%m%n</Property>
    </properties>
    <appenders>
        <!-- 配置日志输出文件名字 追加读写 -->
        <RollingFile name="main"
                     fileName="${baseDir}/GuangNaReceived.log"
                     filePattern="${baseDir}/GuangNaReceived.log.%d{yyyy-MM-dd}"
                     append="true">
            <PatternLayout
                    pattern="${basePattern}" />
            <!-- 设置策略 -->
            <Policies>
                <!-- 基于时间的触发策略。该策略主要是完成周期性的log文件封存工作。有两个参数： interval，integer型，指定两次封存动作之间的时间间隔。单位:以日志的命名精度来确定单位，
                    比如yyyy-MM-dd-HH 单位为小时，yyyy-MM-dd-HH-mm 单位为分钟 modulate，boolean型，说明是否对封存时间进行调制。若modulate=true，
                    则封存时间将以0点为边界进行偏移计算。比如，modulate=true，interval=4hours， 那么假设上次封存日志的时间为03:00，则下次封存日志的时间为04:00，
                    之后的封存时间依次为08:00，12:00，16:00 -->
                <TimeBasedTriggeringPolicy interval="1"
                                           modulate="true" />
            </Policies>
        </RollingFile>

        <Console name="consolePrint" target="SYSTEM_OUT">
            <PatternLayout
                    pattern="${basePattern}" />
        </Console>
    </appenders>
    <Loggers>

        <root level="INFO">
            <appender-ref ref="consolePrint" />
            <appender-ref ref="main" />
        </root>
    </Loggers>
</Configuration>